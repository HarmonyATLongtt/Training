<Window x:Class="ConcreteFacing.UI.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        x:Name="window"
             d:DesignHeight="700" d:DesignWidth="1300" Height="700" Width="1300">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5,5,5,5" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="25" />
        </Style>

        <Style TargetType="Label">
            <Setter Property="Margin" Value="5" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <DataTemplate x:Key="lstCates">
            <StackPanel Orientation="Horizontal">
                <CheckBox IsChecked="{Binding cbxIsCheck, UpdateSourceTrigger=PropertyChanged , Mode=TwoWay}"
                          VerticalAlignment="Center"></CheckBox>
                <Button Background="White" BorderThickness="0"
                                    Content="{Binding btnContent}" Width="auto"
                                    Command="{Binding btnCmd}"></Button>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="lstCoverFaceSetting">
            <Grid Grid.Row="{Binding x}" Grid.Column="{Binding y}" ShowGridLines="true">
                <Image Source="{Binding imgSource}"
                       Height="{Binding imgheight}"
                       Width="{Binding imgwidth}"
                       VerticalAlignment="Top" HorizontalAlignment="Center" Stretch="Uniform"></Image>
                <CheckBox Content="{Binding cbxContent}"
                          IsChecked="{Binding cbxIsCheck, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          VerticalAlignment="Bottom" HorizontalAlignment="Center" ></CheckBox>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="900" />
            <ColumnDefinition Width="180" />
        </Grid.ColumnDefinitions>

        <Label  Grid.Column="0"  Content="Element Covers Applying"
                HorizontalContentAlignment="Left" Grid.ColumnSpan="2"
                FontWeight="Bold" FontStyle="Italic" FontSize="15" />

        <Label Grid.Row="1" Grid.Column="0" Content="Element Category List" />
        <Label Grid.Row="1" Grid.Column="2" Content="Cover Setting Data" />

        <!--<TreeView Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="5">
            <TreeViewItem Header="Category" IsExpanded="True">
                <TreeViewItem>
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="True" VerticalAlignment="Center"></CheckBox>
                            <Button Background="White" BorderThickness="0"
                                    Content="Structural Framing" Width="auto"
                                    Command="{Binding ViewBeamUICommand}"></Button>
                        </StackPanel>
                    </TreeViewItem.Header>
                </TreeViewItem>
                <TreeViewItem>
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="True" VerticalAlignment="Center"></CheckBox>
                            <Button Background="White" BorderThickness="0"
                                    Content="Structural Column" Width="auto"
                                    Command="{Binding ViewColumnUICommand}"></Button>
                        </StackPanel>
                    </TreeViewItem.Header>
                </TreeViewItem>
            </TreeViewItem>
        </TreeView>-->

        <ListView Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="5"
                  ItemsSource="{Binding SourceCatelv}"
                  ItemTemplate="{StaticResource lstCates}">
        </ListView>

        <ListView  Grid.Row="2"  Grid.Column="2" Grid.ColumnSpan="2"  Margin="5"
                  Name ="lstVElemFace"
                  ItemsSource="{Binding SourceCoverFacelv, UpdateSourceTrigger=PropertyChanged}"
                  ItemTemplate="{StaticResource lstCoverFaceSetting}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="2" Columns="3"></UniformGrid>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>

        <!--<ListView Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2"  Margin="5"
                  Name ="lstVElemFace"
                  ItemsSource="{Binding SourceCoverFacelv, UpdateSourceTrigger=PropertyChanged}"
                  ItemTemplate="{StaticResource lstCoverFaceSetting}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="2" Columns="3"></UniformGrid>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>-->

        <StackPanel Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="4"
                    Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button Content="Cancel"   Command="{Binding CloseCommand}"
                    CommandParameter="{Binding ElementName=window, Mode=OneWay}" />
            <Button Content="OK" IsDefault="True" Command="{Binding CreateCommand}"
                    CommandParameter="{Binding ElementName=window, Mode=OneWay}" />
        </StackPanel>
    </Grid>
</Window>